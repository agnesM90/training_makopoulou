---
title: "tidying"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

Title: "Cleaning and wrangling"

```{r}
library(dplyr)
library(tidyr)
library(readr)
```

###read data

```{r}
catch_original <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/df35b.302.1")

#| message: false
```

#explore

```{r}

## Prints the column names of my data frame
colnames(catch_original)

## First 6 lines of the data frame
head(catch_original)

## Summary of each column of data
summary(catch_original)

## Prints unique values in a column (in this case, the region)
unique(catch_original$Region)

## Opens data frame in its own tab to see each row and column of the data (do in console)
View(catch_original)
```

#cleaning and reshaping

```{r}
catch_data <- catch_original %>%
select(Region, Year, Chinook)
head(catch_data)

catch_data <- catch_original %>% 
select(-All, -notesRegCode)
head(catch_data)
```

#check column types
```{r}
glimpse(catch_data)
```
#change Chinook column to numeric
```{r}
catch_clean <- catch_data %>% 
mutate(Chinook = as.numeric(Chinook))
```
#find na values
```{r}
is.na(catch_clean$Chinook)

i <- which(is.na(catch_clean$Chinook))
i

catch_data[i,]



catch_clean <- catch_data %>%
    mutate(Chinook = if_else(condition = Chinook == "I", 
                             true = "1", 
                             false = Chinook),
           Chinook = as.numeric(Chinook))


catch_clean[i, ]
```

#changing using pivot
```{r}
catch_long <- catch_clean %>% 
    #pivot longer all columns except Region and Year
    pivot_longer(
        cols = -c(Region, Year),
        names_to = "species",
        values_to = "catch"
    )

head(catch_long)

catch_wide <- catch_long %>%
    pivot_wider(names_from = species,
                values_from = catch)

head(catch_wide)

```
#rename 
```{r}

catch_long <- catch_long %>%
    rename(catch_thousands = catch)

head(catch_long)
head(catch_long)
```

#add columns
```{r}
catch_long <- catch_long %>%
    mutate(catch = catch_thousands * 1000)

head(catch_long)

catch_long <- catch_long %>%
    mutate(catch = catch_thousands * 1000) %>%
    select(-catch_thousands)

head(catch_long)
```
#summary statistics
```{r}
unique(catch_original$Region)
```

#split
```{r}
#average by region
mean_region <- catch_long %>%
    group_by(Region) %>%
    summarize(mean_catch = mean(catch))

head(mean_region)
#number of rows
n_region <- catch_long %>%
    group_by(Region) %>%
    summarize(n = n())

head(n_region)
```

#exercise
```{r}

catch_year_sp <- catch_long %>%
    group_by(Year, species) %>%
    summarize(total_year = sum(catch, na.rm = T))
```

#filtering

```{r}
sse_catch <- catch_long %>%
    filter(Region == "SSE")

head(sse_catch)


catch_long %>%
  filter(Region == c("SSE", "ALU")) %>%
  nrow()


catch_long %>%
  filter(Region %in% c("SSE", "ALU")) %>%
  nrow()


#exercise
## catch over a million
catch_million <- catch_long %>%
    filter(catch > 1000000)

## Chinook from SSE data
chinook_sse <- catch_long %>%
    filter(Region == "SSE",
           species == "Chinook")

## OR combine tests with & ("and") or | ("or")... also, we can swap == for %in%
chinook_sse <- catch_long %>%
    filter(Region %in% "SSE" & species %in% "Chinook")
```


#sorting with arrange function
```{r}
mean_region <- catch_long %>%
    group_by(Region) %>%
    summarize(mean_catch = mean(catch)) %>%
    arrange(mean_catch)

head(mean_region)

mean_region <- catch_long %>%
    group_by(Region) %>%
    summarize(mean_catch = mean(catch)) %>%
    arrange(desc(mean_catch))

head(mean_region)
```
#split and combine values and coluns
```{r}
sites_df <- data.frame(site = c("HAW-101",
                                "HAW-103",
                                "OAH-320",
                                "OAH-219",
                                "MAU-039"))

sites_df %>%
    separate(site, c("island", "site_number"), "-")
```
## seperate cities
```{r}
cities_df2 <- data.frame(city = c("Juneau AK",
                                 "Sitka AK",
                                 "Anchorage AK"))

colnames(cities_df2)

cities_clean <- cities_df2 %>%
    separate(city, c("city", "state_code"), " ")
```

#dates
```{r}
dates_df <- data.frame(
    year = c("1930",
             "1930",
             "1930"),
    month = c("12",
              "12",
              "12"),
    day = c("14",
            "15",
            "16")
)

dates_df %>%
    unite(date, year, month, day, sep = "-")
```

#######################

```{r}
catch_original <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/df35b.302.1")

mean_region <- catch_original %>%
  select(-All, -notesRegCode) %>% 
  mutate(Chinook = if_else(Chinook == "I", "1", Chinook)) %>% 
  mutate(Chinook = as.numeric(Chinook)) %>% 
  pivot_longer(-c(Region, Year), 
               names_to = "species", 
               values_to = "catch") %>%
  mutate(catch = catch * 1000) %>% 
  group_by(Region) %>% 
  summarize(mean_catch = mean(catch)) %>% 
  arrange(desc(mean_catch))

head(mean_region)
```
#save

```{r}
write_csv(mean_region, here::here("data/mean_catch_by_region.csv"))
```

